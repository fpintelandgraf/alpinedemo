<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html> <head>
<title>Portal Entitlements List</title>
<!--
<link href="/dCSS/Theme2/default/common.css" type="text/css" rel="stylesheet" media="handheld,print,projection,screen,tty,tv" >
<link href="/dCSS/Theme2/default/custom.css" type="text/css" rel="stylesheet" media="handheld,print,projection,screen,tty,tv" >
-->
<link href="/sCSS/9.0/PortalDefault/default/elements.css?browser=&lastMod=1167282235000" media="handheld,print,projection,screen,tty,tv" rel="stylesheet" type="text/css" />
<link href="/sCSS/9.0/PortalDefault/default/common.css?browser=&lastMod=1167282235000" media="handheld,print,projection,screen,tty,tv" rel="stylesheet" type="text/css" />
<link href="/css/assistive.css" media="aural,braille,embossed" rel="stylesheet" type="text/css" />
<link href="/sCSS/9.0/PortalDefault/dStandard.css?browser=&lastMod=1167791038000" media="handheld,print,projection,screen,tty,tv" rel="stylesheet" type="text/css" />
<link href="/sCSS/9.0/PortalDefault/00D6A000001SUwa/00D6A000001SUwa/dCustom.css?browser=&lastMod=1167791038000" media="handheld,print,projection,screen,tty,tv" rel="stylesheet" type="text/css" />
<link href="/sCSS/9.0/PortalDefault/default/extended.css?browser=&lastMod=1167282235000" media="handheld,print,projection,screen,tty,tv" rel="stylesheet" type="text/css" />
<link href="/sCSS/9.0/PortalDefault/{!$Organization.Id}/0606A0000004i2n/portal.css?browser=&lastMod=1167877556000" media="handheld,print,projection,screen,tty,tv" rel="stylesheet" type="text/css" />
<style type="text/css"rel="stylesheet" >
.handy { cursor: pointer; }

.customContactList {
background-color: rgb(243, 243, 236);
border-top-color: rgb(86, 69, 140);
border-right-color: rgb(86, 69, 140);
border-bottom-color: rgb(86, 69, 140);
border-left-color: rgb(86, 69, 140);
}
</style>

<html>
<head>
<script type="text/javascript" src="/js/functions.js"></script>
<script src="/soap/ajax/8.0/connection.js"></script>
<script language="javascript">

var supportProgramIds = new Array();
var entitlements = new Array();
var userContactId = '';
var userAccountId = '';

function pageInit() { // and login
pb = document.getElementById("mainpageblock");
populateFilters();
drawEntitlements();
}

function makeRow(atts) {
if (isIE5 || isIE) {
var trTag = "<TR ";
for (key in atts) {
trTag += key + "=\"" + atts[key] + "\"";
}
trTag += ">";
var ret = document.createElement(trTag);
} else {
var tr = document.createElement("TR");
for (key in atts) {
tr.setAttribute(key, atts[key]);
}
var ret = tr;
}
ret.active = false;
return ret;
}

function makeTable() {
var table = document.createElement("table");
table.className = "list";
table.width = "95%";
table.border = "0";
table.cellspacing = "0";
table.cellpadding = "0";
var tbody = document.createElement("tbody");
table.appendChild(tbody);
table.even = true;
table.tbody =tbody;
return table
}

function createTag(parent, name, keyvalPairs) {
//alert("type of " + typeof(keyvalPairs))
var el = document.createElement(name);
for (key in keyvalPairs) {
el.setAttribute(key, keyvalPairs[key]);
}
parent.appendChild(el);
return el;
}

function populateFilters()
{
    var programFilter = '<select id="ProgramFilter" name="ProgramFilter" tabindex="5" onChange="filter(this)"><option value="All">All</option>';

    var userQuery = "Select ContactId, Contact.AccountId From User Where Id='{!User.Id}'";
    var userResult = sforce.connection.query(userQuery);
    if (userResult!=null && userResult.size > 0) {
        var userIter = new sforce.QueryResultIterator(userResult);
        while (userIter.hasNext()) {
            var user = userIter.next();
            userContactId = user.ContactId;
            userAccountId = user.Contact.AccountId;
        }
    }

    var programQuery = "Select Id, Name from Support_Program__c where Account__c='"+userAccountId+"'";
    var programResult = sforce.connection.query(programQuery);

    if (programResult!=null && programResult.size > 0) {
        var p = programResult.getArray('records')[0];
        var progIter = new sforce.QueryResultIterator(programResult);

        while (progIter.hasNext()) {
            var program = progIter.next();
            if (program!=null) {
                programFilter+='<option value="'+program.Id+'">'+program.Name+'</option>';

                supportProgramIds.push(program.Id);
            }
        }
    }

    programFilter += '</select>';

    var programSpan = document.getElementById('ProgramSpan');
    programSpan.innerHTML = programFilter;
}

function filter(selectEl) {
drawEntitlements(selectEl.options[selectEl.selectedIndex].value);
}

function drawEntitlements(supportProgramId) {
document.getElementById("maintable").innerHTML = "";

var entitlementWhereClause = '';

if (supportProgramId!=null && supportProgramId!="" && supportProgramId!="All") {
entitlementWhereClause += "where e.Support_Program__c='"+supportProgramId+"'";
} else if (supportProgramIds.length>0) {
entitlementWhereClause += "where (";
for (var i = 0; i<supportProgramIds.length; i++) {
entitlementWhereClause += "Support_Program__c='"+supportProgramIds[i]+"'";
if (i<supportProgramIds.length-1) {
entitlementWhereClause += " or ";
}
}
entitlementWhereClause += ")";
} else {
document.getElementById("maintable").innerHTML="No entitlements found for this contact.";
return;
}

var entitlementQuery = "Select e.Case_Pack__c, e.Cases_Remaining__c, e.Business_Hours__c,"+
                            "e.Name, e.Id, e.Support_Program__c, "+
                            "e.Support_Program__r.Name,"+
                            "e.Support_Program__r.P1_Resolution_hours__c, e.Support_Program__r.P1_Response_hours__c,"+
                            "e.Support_Program__r.P2_Resolution_hours__c, e.Support_Program__r.P2_Response_hours__c,"+
                            "e.Support_Program__r.P3_Resolution_hours__c, e.Support_Program__r.P3_Response_hours__c,"+
                            "e.Support_Program__r.P4_Resolution_hours__c, e.Support_Program__r.P4_Response_hours__c,"+
                            "e.Support_Program__r.P5_Resolution_hours__c, e.Support_Program__r.P5_Response_hours__c,"+
                            "e.Support_Program__r.Id from Entitlement__c e "+entitlementWhereClause+" Order By e.Name";

var entitlementsResult = sforce.connection.query(entitlementQuery);

if (entitlementsResult!=null && entitlementsResult.size > 0) {
/*
var ta = makeTable()
var th = makeRow([]);
th.active == false;
ta.tbody.appendChild(th);

createTag(th,"th").innerHTML="Support Program";
createTag(th,"th").innerHTML="Entitlement Name";
createTag(th,"th").innerHTML="Business Hours";
createTag(th,"th").innerHTML="Cases Remaining";
createTag(th,"th").innerHTML=" ";
*/

var ta = makeTable();
ta.border = "0";
ta.cellspacing = "0";

var headerAtts = new Object();
headerAtts["class"] = "headerRow";
headerAtts["width"] = "40%";
var headerRow = makeRow(headerAtts);
headerRow.active == false;
ta.tbody.appendChild(headerRow);

createTag(headerRow,"th").innerHTML="Support Program";
createTag(headerRow,"th").innerHTML="Entitlement Name";
createTag(headerRow,"th").innerHTML="Business Hours";
createTag(headerRow,"th").innerHTML="Cases Remaining";
createTag(headerRow,"th").innerHTML=" ";

var i = 0;
var entIter = new sforce.QueryResultIterator(entitlementsResult);
while (entIter.hasNext()) {
var entitlement = entIter.next();

//Store the entitlement object in case we need to decrement it later...
entitlements.push(entitlement);

var atts = new Object();
if (i==0) { // skin stuff
atts["class"] = "datarow even first";
} else if (ta.even == true) {
atts["class"] = "datarow even";
} else {
atts["class"] = "datarow odd";
}
ta.even = !ta.even;

atts["onmouseout"] = "if (typeof(hiOff) != 'undefined' && this.active == false){hiOff(this);}";
atts["onmouseover"] = "if (typeof(hiOn) != 'undefined'){hiOn(this);}";
//atts["onclick"] = "clickOppConCall(this);"; // search
//atts["class"] = "handy";
atts["class"] = " dataCell ";
atts["style"] = "font-size:90%;";
var tr = makeRow(atts);
tr.active == true;

//tr.opp = op;
ta.tbody.appendChild(tr);

createTag(tr,"td",[]).innerHTML = '<a target="main" href="/'+entitlement.Support_Program__c+'">'+entitlement.Support_Program__r.Name+'</a>';
createTag(tr,"td",[]).innerHTML = entitlement.Name;
createTag(tr,"td",[]).innerHTML = entitlement.Business_Hours__c;

var createNewCases = entitlement.Case_Pack__c=='true' && entitlement.Cases_Remaining__c==0;

var casesRemaining = entitlement.Cases_Remaining__c!=null?entitlement.Cases_Remaining__c.substring(0,entitlement.Cases_Remaining__c.length-2):"N/A";
createTag(tr,"td",[]).innerHTML = entitlement.Case_Pack__c=='true'?casesRemaining:'N/A';

buttonTd = createTag(tr,"td",[]);
var newCaseCall;
var buttonLabel;
if (createNewCases) {
newCaseCall = "addCasesToEntitlement('"+entitlement.Id+"','"+entitlement.Name+"','"+entitlement.Support_Program__c+"','"+entitlement.Support_Program__r.Name+"');";
buttonLabel = " Renew This Contract And Create New Case ";
} else {
newCaseCall = "newCaseFromEntitlement('"+entitlement.Id+"','"+entitlement.Name+"','"+entitlement.Support_Program__c+"','"+entitlement.Support_Program__r.Name+"');";
buttonLabel = " New Case On This Contract ";
}
buttonTd.innerHTML = '<input value="'+buttonLabel+'" class="btn" name="newCase" onclick="'+newCaseCall+'" title="New Case From Entitlement" type="button" />';

i++;
}

document.getElementById("maintable").appendChild(ta);
} else {
document.getElementById("maintable").innerHTML="No entitlements found.";
}
}

//Finds an entitlement in the list by its ID
function getEntitlementById(entitlementId) {
for (var nEnt = 0; nEnt<entitlements.length; nEnt++) {
var currentEntitlement = entitlements[nEnt];
if (currentEntitlement.Id == entitlementId) {
return currentEntitlement;
}
}
}

function addCasesToEntitlement(entitlementId, entitlementName, programId, programName)
{
var opp = new sforce.SObject("Opportunity");
opp.Name = "{!Account.Name} - Renewed Entitlement: "+entitlementName+" - $2400";
opp.AccountId = '{!Account.Id}';
opp.Type = 'Case Pack Renewal';
opp.Amount = '2400';
opp.ForecastCategory = 'Closed';
opp.StageName = 'Closed Won';
opp.CloseDate = new Date();

try {
var result = sforce.connection.create([opp]);
} catch (error) {
alert(error);
}

if (!result[0].getBoolean("success")) {
alert('Unable to create new Opportunity. Error: '+result[0].message);
}

var selectedEntitlement = getEntitlementById(entitlementId);
//Set the case pack to its full value in memory -- we'll decrement it and update it to SFDC after the case is created in newCaseFromEntitlement.
selectedEntitlement.Cases_Remaining__c = 12;

newCaseFromEntitlement(entitlementId, entitlementName, programId, programName);
}

function newCaseFromEntitlement(entitlementId, entitlementName, programId, programName) {
//Create the case
var caseObj = new sforce.SObject("Case");
//caseObj.ContactId = userContactId;
//caseObj.AccountId = '{!Account.Id}';
caseObj.Entitlement__c = entitlementId;
//caseObj.Origin = "Phone";
    if (selectedEntitlement!=null) {
        caseObj.P1_Resolution_hours__c=selectedEntitlement.Support_Program__r.P1_Resolution_hours__c;
        caseObj.P1_Response_hours__c=selectedEntitlement.Support_Program__r.P1_Response_hours__c;
        caseObj.P2_Resolution_hours__c=selectedEntitlement.Support_Program__r.P2_Resolution_hours__c;
        caseObj.P2_Response_hours__c=selectedEntitlement.Support_Program__r.P2_Response_hours__c;
        caseObj.P3_Resolution_hours__c=selectedEntitlement.Support_Program__r.P3_Resolution_hours__c;
        caseObj.P3_Response_hours__c=selectedEntitlement.Support_Program__r.P3_Response_hours__c;
        caseObj.P4_Resolution_hours__c=selectedEntitlement.Support_Program__r.P4_Resolution_hours__c;
        caseObj.P4_Response_hours__c=selectedEntitlement.Support_Program__r.P4_Response_hours__c;
        caseObj.P5_Resolution_hours__c=selectedEntitlement.Support_Program__r.P5_Resolution_hours__c;
        caseObj.P5_Response_hours__c=selectedEntitlement.Support_Program__r.P5_Response_hours__c;
    }

try {
var result = sforce.connection.create([caseObj]);
} catch (error) {
alert(error);
return;
}

if (!result[0].success || result[0].success=='false') {
alert('Unable to create new Case. Error: '+result[0].message);
return;
} else {
//Decrement the entitlement
var selectedEntitlement = getEntitlementById(entitlementId);

//If it's a case pack, then decrement it
if (selectedEntitlement!=null && selectedEntitlement.Case_Pack__c=='true') {
//Make a new sobject out of it and do an update
var newEntitlement = new sforce.SObject("Entitlement__c");
newEntitlement.Id = selectedEntitlement.Id;
newEntitlement.Cases_Remaining__c = selectedEntitlement.Cases_Remaining__c - 1;

try {
var entResult = sforce.connection.update([newEntitlement]);
} catch (error) {
alert(error);
return;
}

if (!entResult[0].getBoolean("success")) {
alert('Unable to decrement Entitlement. Error: '+entResult[0].message);
}
}

//Go to the edit page of the case
parent.navigateToUrl('/'+result[0].id+'/e?retURL=%2F'+result[0].id);
}
}

</script>
</head>
<body onload="pageInit()" class="caseTab overviewPage">

<div class="bRelatedList">
<div class="bNext"><div class="withFilter"><div class="clearingBox"></div></div></div>
<div class="hotListElement"><div class="bPageBlock secondaryPalette">
<div class="pbHeader">
<table border="0" cellpadding="2" cellspacing="0">


<tr>

<td class="pbTitle">
<img src="/s.gif" alt="" width="1" height="1" class="minWidth" title="" /><h3>Entitlements</h3><br></td>
</tr>
<tr>
<td><b>Support Program:</b> <span id="ProgramSpan"><select id="ProgramFilter" name="ProgramFilter" tabindex="5"></select></span></td>
</tr>
</table>
</div>
<div id="maintable" class="pbBody"> <!-- the body --></div>
</body>
</html>